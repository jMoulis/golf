/* eslint-disable prettier/prettier */
import { ENUM_PELZ_THEME } from './enums';
// eslint-disable-next-line import/no-cycle
import { isBetween } from './utils';

export const buildArrayFromNumber = (length: number) =>
  Array.from({ length }, (_, index) => (index += 1));

const singleTestMatrix: {
  [key: string]: Record<string, [number, number, string][]>;
} = {
  [ENUM_PELZ_THEME.SHORT_GAME]: {
    'TEST 1': [
      [0, 2, '25+'],
      [2, 4, '25-15'],
      [4, 6, '15-8'],
      [6, 8, '8-3'],
      [8, 9, '3-0'],
      [9, 41, 'Tour'],
    ],
    'TEST 2': [
      [0, 3, '27+'],
      [3, 5, '27-17'],
      [5, 8, '17-8'],
      [8, 10, '8-5'],
      [10, 12, '5-0'],
      [12, 41, 'Tour'],
    ],
    'TEST 3': [
      [0, 2, '22+'],
      [2, 5, '22-12'],
      [5, 7, '12-6'],
      [7, 10, '6-2'],
      [10, 12, '2-0'],
      [12, 41, 'Tour'],
    ],
    'TEST 4': [
      [0, 2, '16+'],
      [2, 5, '16-6'],
      [5, 7, '6-3'],
      [7, 9, '3-1'],
      [9, 11, '1-0'],
      [11, 41, 'Tour'],
    ],
    'TEST 5': [
      [0, 6, '30+'],
      [6, 9, '30-22'],
      [9, 11, '22-12'],
      [11, 14, '12-5'],
      [14, 16, '5-0'],
      [16, 41, 'Tour'],
    ],
    'TEST 6': [
      [0, 6, '30+'],
      [6, 9, '30-22'],
      [9, 11, '22-12'],
      [11, 14, '12-5'],
      [14, 16, '5-0'],
      [16, 41, 'Tour'],
    ],
    'TEST 7': [
      [0, 3, '33+'],
      [3, 5, '33-20'],
      [5, 7, '20-12'],
      [7, 9, '12-7'],
      [9, 14, '7-0'],
      [14, 41, 'Tour'],
    ],
    'TEST 8': [
      [0, 3, '30+'],
      [3, 6, '30-17'],
      [6, 8, '17-10'],
      [8, 10, '10-5'],
      [10, 13, '5-0'],
      [13, 41, 'Tour'],
    ],
  },
  [ENUM_PELZ_THEME.PUTTING]: {
    'TEST 1': [
      [0, 1, '40'],
      [1, 2, '39'],
      [2, 3, '37'],
      [3, 4, '31'],
      [4, 5, '25'],
      [5, 6, '19'],
      [6, 7, '14'],
      [7, 8, '9'],
      [8, 9, '5'],
      [9, 10, '1'],
      [10, 11, '-2'],
    ],
    'TEST 2': [
      [0, 1, '38'],
      [1, 2, '31'],
      [2, 3, '25'],
      [3, 4, '20'],
      [4, 5, '16'],
      [5, 6, '12'],
      [6, 7, '8'],
      [7, 8, '4'],
      [8, 9, '1'],
      [9, 10, '-2'],
      [10, 11, '-4'],
    ],
    'TEST 3': [
      [0, 1, '40'],
      [1, 2, '34'],
      [2, 3, '28'],
      [3, 4, '23'],
      [4, 5, '19'],
      [5, 6, '16'],
      [6, 7, '13'],
      [7, 8, '10'],
      [8, 9, '7'],
      [9, 10, '4'],
      [10, 11, '1'],
      [11, 12, '-1'],
      [12, 13, '-3'],
      [13, 14, '-5'],
      [14, 15, '-6'],
      [15, 16, '-7'],
      [16, 17, '-8'],
    ],
    'TEST 4': [
      [0, 1, '39'],
      [1, 2, '33'],
      [2, 3, '27'],
      [3, 4, '21'],
      [4, 5, '16'],
      [5, 6, '12'],
      [6, 7, '9'],
      [7, 8, '6'],
      [8, 9, '4'],
      [9, 10, '2'],
      [10, 11, '0'],
      [11, 12, '-2'],
      [12, 13, '-3'],
      [13, 14, '-4'],
      [14, 15, '-5'],
      [15, 16, '-6'],
      [16, 17, '-7'],
      [17, 18, '-8'],
    ],
    'TEST 5': [
      [0, 1, '39'],
      [1, 2, '36'],
      [2, 3, '33'],
      [3, 4, '30'],
      [4, 5, '27'],
      [5, 6, '24'],
      [6, 7, '21'],
      [7, 8, '18'],
      [8, 9, '15'],
      [9, 10, '12'],
      [10, 11, '9'],
      [11, 12, '7'],
      [12, 13, '5'],
      [13, 14, '3'],
      [14, 15, '2'],
      [15, 16, '1'],
      [16, 17, '0'],
      [17, 18, '-1'],
      [18, 19, '-2'],
      [19, 20, '-3'],
      [20, 21, '-4'],
      [21, 22, '-5'],
      [22, 23, '-6'],
      [23, 24, '-7'],
      [24, 25, '-8'],
    ],
    'TEST 6': [
      [0, 1, '40'],
      [1, 2, '38'],
      [2, 3, '34'],
      [3, 4, '30'],
      [4, 5, '26'],
      [5, 6, '22'],
      [6, 7, '18'],
      [7, 8, '14'],
      [8, 9, '11'],
      [9, 10, '8'],
      [10, 11, '6'],
      [11, 12, '4'],
      [12, 13, '2'],
      [13, 14, '0'],
      [14, 15, '-2'],
      [15, 16, '-3'],
      [16, 17, '-4'],
      [17, 18, '-5'],
      [18, 19, '-6'],
      [19, 20, '-7'],
      [20, 21, '-8'],
    ],
  },
};

export const globalTestMatrix: {
  [key: string]: [number, number, number][];
} = {
  [ENUM_PELZ_THEME.SHORT_GAME]: [
    [150, 145, -8],
    [145, 140, -7],
    [140, 135, -6],
    [135, 130, -5],
    [130, 125, -3],
    [125, 120, -2],
    [120, 115, -1],
    [115, 110, 0],
    [110, 107, 1],
    [107, 103, 2],
    [103, 100, 3],
    [100, 97, 4],
    [97, 93, 5],
    [93, 90, 6],
    [90, 87, 7],
    [87, 83, 8],
    [83, 80, 9],
    [80, 77, 10],
    [77, 73, 11],
    [73, 70, 12],
    [70, 67, 13],
    [67, 63, 14],
    [63, 60, 15],
    [60, 58, 16],
    [58, 56, 17],
    [56, 54, 18],
    [54, 52, 19],
    [52, 50, 20],
    [50, 48, 21],
    [48, 46, 22],
    [46, 44, 23],
    [44, 42, 24],
    [42, 40, 35],
    [40, 38, 26],
    [38, 36, 27],
    [36, 34, 28],
    [34, 32, 29],
    [32, 30, 30],
    [30, 28, 31],
    [28, 26, 32],
    [26, 24, 33],
    [24, 22, 34],
    [22, 20, 35],
    [20, 18, 36],
    [18, 16, 37],
    [16, 14, 38],
    [14, 12, 39],
  ],
  [ENUM_PELZ_THEME.PUTTING]: [
    [117, 113, -8],
    [113, 109, -7],
    [109, 104, -6],
    [104, 99, -5],
    [99, 94, -4],
    [94, 89, -3],
    [89, 85, -2],
    [85, 80, -1],
    [80, 76, 0],
    [76, 74, 1],
    [74, 68, 2],
    [68, 66, 3],
    [66, 64, 4],
    [64, 61, 5],
    [61, 58, 6],
    [58, 55, 7],
    [55, 54, 8],
    [54, 52, 9],
    [52, 49, 10],
    [49, 46, 11],
    [46, 45, 12],
    [45, 42, 13],
    [42, 40, 14],
    [40, 38, 15],
    [38, 36, 16],
    [36, 35, 17],
    [35, 32, 18],
    [32, 31, 19],
    [31, 30, 20],
    [30, 28, 21],
    [28, 26, 22],
    [26, 24, 23],
    [24, 23, 24],
    [23, 21, 25],
    [21, 20, 26],
    [20, 18, 27],
    [18, 16, 28],
    [16, 15, 29],
    [15, 14, 30],
    [14, 12, 31],
    [12, 11, 32],
    [11, 9, 33],
    [9, 8, 34],
    [8, 6, 35],
    [6, 5, 36],
    [5, 2, 37],
    [2, 1, 38],
    [1, 0, 39],
    [0, 0, 40],
  ],
};

const ranges: (
  theme: ENUM_PELZ_THEME
) => Record<string, [number, number, string][]> = (theme) =>
    buildArrayFromNumber(theme === ENUM_PELZ_THEME.SHORT_GAME ? 8 : 6).reduce(
      (acc: Record<string, [number, number, string][]>, id: number) => {
        const testID = `TEST ${id}`;
        return {
          ...acc,
          [testID]: singleTestMatrix[theme][testID] || [],
        };
      },
      {}
    );

export const pelzMatrices = (
  theme: ENUM_PELZ_THEME,
  testID: string,
  score: number
) => {
  const getRanges = ranges(theme)[testID];
  return (getRanges || []).reduce((acc: string, [low, high, value]) => {
    if (isBetween(low, high, score)) {
      return value;
    }
    return acc;
  }, '');
};
